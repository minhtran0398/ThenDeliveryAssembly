@inherits AddProductFormBase

<EditForm EditContext="FormContext">
   <FluentValidator Validator="new ProductValidator()" />
   <ValidationSummary />
   <div class="row">
      <div class="col-md-12 row-item">
         <label>Hình đại diện: </label><br/>
         <CustomImageEdit Base64String="@ProductModel.Image"
                          OnChangeImage="HandleImageChanged" />
      </div>
      <div class="col-md-12 row-item">
         <label>Tên món: </label>
         <DxTextBox Text="@ProductModel.Name"
                    TextChanged="HandleProductNameChanged"
                    TextExpression="() => ProductModel.Name" />
      </div>
      <div class="col-md-12 row-item">
         <label>Đơn giá: </label>
         <CustomCurrencyEdit InputValue="@ProductModel.UnitPrice"
                             ValueChanged="HandleUnitPriceChanged" />
      </div>
      <div class="col-md-12 row-item">
         <label>Thực đơn: </label>
         <DxComboBox NullText="Select menu ..."
                     TextFieldName="DisplayText"
                     Data="MenuList"
                     SelectedItem="@ProductModel.MenuItem"
                     SelectedItemChanged="HandleSelectedMenuChanged"
                     SelectedItemExpression="() => ProductModel.MenuItem" />
      </div>
      <div class="col-md-12 row-item">
         <label>Món ăn kèm: </label>
         @if (IsShowFormTopping == false)
         {
            <p>@ProductModel.ToppingListString</p>
            <a href="javascript:void(0)"
               @onclick="HandleCreateTopping"
               style="text-decoration:none">
               <i class="fas fa-plus"></i>
               Thêm món ăn kèm
            </a>
         }
         else
         {
            <AddTopping ToppingList="ProductModel.ToppingList"
                        OnCancel="HandleCancelCreateTopping"
                        OnSubmit="HandleSubmitCreateTopping" />
         }
      </div>
      <div class="col-md-12 row-item">
         <label>Mô tả: </label>
         <DxTextBox Text="@ProductModel.Description"
                    TextChanged="HandleDescriptionChanged"
                    TextExpression="() => ProductModel.Description" />
      </div>
      <div class="col-md-12 add-product__form-footer">
         <DxButton SubmitFormOnClick="false"
                   Text="Hủy"
                   @onclick="HandleOnCancel"
                   RenderStyle="@ButtonRenderStyle.Secondary"
                   CssClass="add-product__form-footer-button" />
         <DxButton SubmitFormOnClick="false"
                   @onclick="HandleOnSubmit"
                   Text="Lưu"
                   RenderStyle="@ButtonRenderStyle.Secondary"
                   CssClass="add-product__form-footer-button" />
      </div>
   </div>
</EditForm>