@page "/order-list"
@inherits OrderListBase

@if(SelectedOrder != null)
{
	<DxPopup HeaderText="Xác nhận" @bind-Visible="@IsShowPopupConfirm">
		<Content>
			<p>Bạn chắc chắn muốn giao đơn hàng này?</p>
		</Content>
		<FooterTemplate>
			<button class="btn btn-dark"
					@onclick="HandleClose">Close</button>
			<button class="btn btn-success"
					@onclick="async () => await HandleConfirm()">Confirm</button>
		</FooterTemplate>
	</DxPopup>
}
@if(ResponseModel != null)
{
	<DxPopup HeaderText="@(ResponseModel.IsSuccess ? "Success" : "Fail")" @bind-Visible="@IsShowPopupResult">
		<Content>
		  <p>@(ResponseModel.Message)</p>
		</Content>
		<FooterTemplate>
			<button class="btn btn-success"
					@onclick="@(() => IsShowPopupResult = false)">Confirm</button>
		</FooterTemplate>
	</DxPopup>
}

@if(OrderList is null)
{
	<p>Loading...</p>
}
else
{
	<div class="list-group">
		@foreach (var order in OrderList)
		{
			<a href="javascript:void(0)"
				@onclick="async () => await HandleShowChooseOrder(order)"
				class="mb-2 list-group-item list-group-item-action active">
			   <div class="d-flex w-100 justify-content-between">
			      <h5 class="mb-1">@order.OrderItemList[0].OrderProduct.Merchant.Name</h5>
			      <small>@TimeRange.DaysBetween(DateTime.Now, order.DeliveryDateTime) days ago</small>
			   </div>
			   <p class="mb-1">@(order.OrderItemList[0].OrderProduct.Merchant.OpenTime.TimeString) - 
					@(order.OrderItemList[0].OrderProduct.Merchant.CloseTime.TimeString)</p>
			   <small>@(order.OrderItemList[0].OrderProduct.Merchant.AddressString)</small>
			</a>
		}
	</div>
}

